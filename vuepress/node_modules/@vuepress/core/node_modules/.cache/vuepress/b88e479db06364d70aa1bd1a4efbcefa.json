{"remainingRequest":"/Users/gavincoder/mycode/github/Gavin-note/vuepress/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/gavincoder/mycode/github/Gavin-note/vuepress/node_modules/@vuepress/core/lib/client/app.js","dependencies":[{"path":"/Users/gavincoder/mycode/github/Gavin-note/vuepress/node_modules/@vuepress/core/lib/client/app.js","mtime":1566811178774},{"path":"/Users/gavincoder/mycode/github/Gavin-note/vuepress/node_modules/cache-loader/dist/cjs.js","mtime":1566811178782},{"path":"/Users/gavincoder/mycode/github/Gavin-note/vuepress/node_modules/babel-loader/lib/index.js","mtime":1566811178784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZm9yLWVhY2giOwoKLyogZ2xvYmFsIFZVRVBSRVNTX1RFTVBfUEFUSCAqLwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBSb3V0ZXIgZnJvbSAndnVlLXJvdXRlcic7CmltcG9ydCBkYXRhTWl4aW4gZnJvbSAiLi9kYXRhTWl4aW4iOwppbXBvcnQgeyByb3V0ZXMgfSBmcm9tICdAaW50ZXJuYWwvcm91dGVzJzsKaW1wb3J0IHsgc2l0ZURhdGEgfSBmcm9tICdAaW50ZXJuYWwvc2l0ZURhdGEnOwppbXBvcnQgYXBwRW5oYW5jZXJzIGZyb20gJ0BpbnRlcm5hbC9hcHAtZW5oYW5jZXJzJzsKaW1wb3J0IGdsb2JhbFVJQ29tcG9uZW50cyBmcm9tICdAaW50ZXJuYWwvZ2xvYmFsLXVpJzsKaW1wb3J0IENsaWVudENvbXB1dGVkTWl4aW4gZnJvbSAnQHRyYW5zZm9ybS9DbGllbnRDb21wdXRlZE1peGluJzsKaW1wb3J0IFZ1ZVByZXNzIGZyb20gIi4vcGx1Z2lucy9WdWVQcmVzcyI7CmltcG9ydCB7IGhhbmRsZVJlZGlyZWN0Rm9yQ2xlYW5VcmxzIH0gZnJvbSAiLi9yZWRpcmVjdC5qcyI7CmltcG9ydCB7IGdldExheW91dEFzeW5jQ29tcG9uZW50IH0gZnJvbSAiLi91dGlsIjsgLy8gYnVpbHQtaW4gY29tcG9uZW50cwoKaW1wb3J0IENvbnRlbnQgZnJvbSAiLi9jb21wb25lbnRzL0NvbnRlbnQuanMiOwppbXBvcnQgQ29udGVudFNsb3RzRGlzdHJpYnV0b3IgZnJvbSAiLi9jb21wb25lbnRzL0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIjsKaW1wb3J0IE91dGJvdW5kTGluayBmcm9tICIuL2NvbXBvbmVudHMvT3V0Ym91bmRMaW5rLnZ1ZSI7CmltcG9ydCBDbGllbnRPbmx5IGZyb20gIi4vY29tcG9uZW50cy9DbGllbnRPbmx5IjsgLy8gc3VnZ2VzdCBkZXYgc2VydmVyIHJlc3RhcnQgb24gYmFzZSBjaGFuZ2UKCmlmIChtb2R1bGUuaG90KSB7CiAgdmFyIHByZXZCYXNlID0gc2l0ZURhdGEuYmFzZTsKICBtb2R1bGUuaG90LmFjY2VwdChWVUVQUkVTU19URU1QX1BBVEggKyAnL2ludGVybmFsL3NpdGVEYXRhLmpzJywgZnVuY3Rpb24gKCkgewogICAgaWYgKHNpdGVEYXRhLmJhc2UgIT09IHByZXZCYXNlKSB7CiAgICAgIHdpbmRvdy5hbGVydCgiW3Z1ZXByZXNzXSBTaXRlIGJhc2UgaGFzIGNoYW5nZWQuICIgKyAiUGxlYXNlIHJlc3RhcnQgZGV2IHNlcnZlciB0byBlbnN1cmUgY29ycmVjdCBhc3NldCBwYXRocy4iKTsKICAgIH0KICB9KTsKfQoKVnVlLmNvbmZpZy5wcm9kdWN0aW9uVGlwID0gZmFsc2U7ClZ1ZS51c2UoUm91dGVyKTsKVnVlLnVzZShWdWVQcmVzcyk7IC8vIG1peGluIGZvciBleHBvc2luZyAkc2l0ZSBhbmQgJHBhZ2UKClZ1ZS5taXhpbihkYXRhTWl4aW4oQ2xpZW50Q29tcHV0ZWRNaXhpbiwgc2l0ZURhdGEpKTsgLy8gY29tcG9uZW50IGZvciByZW5kZXJpbmcgbWFya2Rvd24gY29udGVudCBhbmQgc2V0dGluZyB0aXRsZSBldGMuCgpWdWUuY29tcG9uZW50KCdDb250ZW50JywgQ29udGVudCk7ClZ1ZS5jb21wb25lbnQoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJywgQ29udGVudFNsb3RzRGlzdHJpYnV0b3IpOwpWdWUuY29tcG9uZW50KCdPdXRib3VuZExpbmsnLCBPdXRib3VuZExpbmspOyAvLyBjb21wb25lbnQgZm9yIGNsaWVudC1vbmx5IGNvbnRlbnQKClZ1ZS5jb21wb25lbnQoJ0NsaWVudE9ubHknLCBDbGllbnRPbmx5KTsgLy8gY29yZSBjb21wb25lbnRzCgpWdWUuY29tcG9uZW50KCdMYXlvdXQnLCBnZXRMYXlvdXRBc3luY0NvbXBvbmVudCgnTGF5b3V0JykpOwpWdWUuY29tcG9uZW50KCdOb3RGb3VuZCcsIGdldExheW91dEFzeW5jQ29tcG9uZW50KCdOb3RGb3VuZCcpKTsgLy8gZ2xvYmFsIGhlbHBlciBmb3IgYWRkaW5nIGJhc2UgcGF0aCB0byBhYnNvbHV0ZSB1cmxzCgpWdWUucHJvdG90eXBlLiR3aXRoQmFzZSA9IGZ1bmN0aW9uIChwYXRoKSB7CiAgdmFyIGJhc2UgPSB0aGlzLiRzaXRlLmJhc2U7CgogIGlmIChwYXRoLmNoYXJBdCgwKSA9PT0gJy8nKSB7CiAgICByZXR1cm4gYmFzZSArIHBhdGguc2xpY2UoMSk7CiAgfSBlbHNlIHsKICAgIHJldHVybiBwYXRoOwogIH0KfTsKCmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVBcHAoaXNTZXJ2ZXIpIHsKICB2YXIgcm91dGVyQmFzZSA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5fX1ZVRVBSRVNTX1JPVVRFUl9CQVNFX18gPyB3aW5kb3cuX19WVUVQUkVTU19ST1VURVJfQkFTRV9fIDogc2l0ZURhdGEucm91dGVyQmFzZSB8fCBzaXRlRGF0YS5iYXNlOwogIHZhciByb3V0ZXIgPSBuZXcgUm91dGVyKHsKICAgIGJhc2U6IHJvdXRlckJhc2UsCiAgICBtb2RlOiAnaGlzdG9yeScsCiAgICBmYWxsYmFjazogZmFsc2UsCiAgICByb3V0ZXM6IHJvdXRlcywKICAgIHNjcm9sbEJlaGF2aW9yOiBmdW5jdGlvbiBzY3JvbGxCZWhhdmlvcih0bywgZnJvbSwgc2F2ZWRQb3NpdGlvbikgewogICAgICBpZiAoc2F2ZWRQb3NpdGlvbikgewogICAgICAgIHJldHVybiBzYXZlZFBvc2l0aW9uOwogICAgICB9IGVsc2UgaWYgKHRvLmhhc2gpIHsKICAgICAgICBpZiAoVnVlLiR2dWVwcmVzcy4kZ2V0KCdkaXNhYmxlU2Nyb2xsQmVoYXZpb3InKSkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHNlbGVjdG9yOiB0by5oYXNoCiAgICAgICAgfTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgeDogMCwKICAgICAgICAgIHk6IDAKICAgICAgICB9OwogICAgICB9CiAgICB9CiAgfSk7CiAgaGFuZGxlUmVkaXJlY3RGb3JDbGVhblVybHMocm91dGVyKTsKICB2YXIgb3B0aW9ucyA9IHt9OwoKICB0cnkgewogICAgYXBwRW5oYW5jZXJzLmZvckVhY2goZnVuY3Rpb24gKGVuaGFuY2VyKSB7CiAgICAgIGlmICh0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICBlbmhhbmNlcih7CiAgICAgICAgICBWdWU6IFZ1ZSwKICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnMsCiAgICAgICAgICByb3V0ZXI6IHJvdXRlciwKICAgICAgICAgIHNpdGVEYXRhOiBzaXRlRGF0YSwKICAgICAgICAgIGlzU2VydmVyOiBpc1NlcnZlcgogICAgICAgIH0pOwogICAgICB9CiAgICB9KTsKICB9IGNhdGNoIChlKSB7CiAgICBjb25zb2xlLmVycm9yKGUpOwogIH0KCiAgdmFyIGFwcCA9IG5ldyBWdWUoT2JqZWN0LmFzc2lnbihvcHRpb25zLCB7CiAgICByb3V0ZXI6IHJvdXRlciwKICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHsKICAgICAgcmV0dXJuIGgoJ2RpdicsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgaWQ6ICdhcHAnCiAgICAgICAgfQogICAgICB9LCBbaCgncm91dGVyLXZpZXcnLCB7CiAgICAgICAgcmVmOiAnbGF5b3V0JwogICAgICB9KSwgaCgnZGl2JywgewogICAgICAgIGNsYXNzOiAnZ2xvYmFsLXVpJwogICAgICB9LCBnbG9iYWxVSUNvbXBvbmVudHMubWFwKGZ1bmN0aW9uIChjb21wb25lbnQpIHsKICAgICAgICByZXR1cm4gaChjb21wb25lbnQpOwogICAgICB9KSldKTsKICAgIH0KICB9KSk7CiAgcmV0dXJuIHsKICAgIGFwcDogYXBwLAogICAgcm91dGVyOiByb3V0ZXIKICB9Owp9"},null]}