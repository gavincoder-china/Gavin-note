{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{266:function(t,a,s){\"use strict\";s.r(a);var r=s(38),n=Object(r.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"div\",[t._v(\"欢迎大家加入我的github项目,一起学习，一起发展\")]),t._v(\" \"),s(\"a\",{staticStyle:{\"text-decoration\":\"none\",color:\"white\",\"font-weight\":\"bolder\"},attrs:{href:\"https://github.com/xunyegege\"}},[t._v(\"---\\x3e\\n全栈工程师进阶学习站\")]),s(\"br\"),t._v(\" \"),s(\"a\",{staticStyle:{\"text-decoration\":\"none\",color:\"white\",\"font-weight\":\"bolder\"},attrs:{href:\"https://github.com/xunyegege/New-JavaScript-in-2019\"}},[t._v(\"---\\x3e\\n我的前端学习笔记\")]),s(\"br\"),t._v(\" \"),s(\"a\",{staticStyle:{\"text-decoration\":\"none\",color:\"white\",\"font-weight\":\"bolder\"},attrs:{href:\"https://github.com/xunyegege/report_gather\"}},[t._v(\"---\\x3e行业内最新最群的报告，工作日每日更新\")]),s(\"br\"),t._v(\" \"),s(\"p\",[s(\"a\",{staticStyle:{\"text-decoration\":\"none\",color:\"white\",\"font-weight\":\"bolder\"},attrs:{href:\"https://github.com/xunyegege/Super-practical-javascript-code-snippet-refactoring\"}},[t._v(\"---\\x3e原生 js 训练计划\")]),s(\"br\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"初识springboot\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#初识springboot\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 初识springboot\")]),t._v(\" \"),s(\"p\",[t._v(\"1为什么使用springboot\")]),t._v(\" \"),s(\"p\",[t._v(\"简单，效率高，约定大于配置,可以用java -jar的方式来启动，可以独立部署\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"pom文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pom文件\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" pom文件\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[t._v(\"spring\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"boot\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"starter\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"parent\\n定义：依赖的版本控制器\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\")])]),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"starter\\n定义：导入某个场景所需要的所有依赖\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\")])]),s(\"div\",{staticClass:\"language-java line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[t._v(\"spring\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"boot\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"maven\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"plugin\\n定义：使springboot可以打包成jar包，并且可以用java \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"jar 启动\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\")])]),s(\"div\",{staticClass:\"language-java line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[t._v(\"application\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"properties\\n定义：核心配置文件（端口号，数据库等等）\\n描述：有两种类型分别是properties和yml 当同时出现两者 springboot优先读取properties\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\")])]),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"@SpringBootApplication\\n定义：核心配置类 其中包含\\n-@SpringBootConfiguration\\n定义：通过@Component知道SpringBoot专用的 注入到spring容器 \\n-@EnableAutoConfiguration 其中包含\\n--@AutoConfigurationPackage 其中包含\\n定义：\\n---@Import({Registrar.class})\\n定义：spring底层注解表示导入类 这里导入Registrar类 \\nRegistrar类中帮我们把 被@SpringBootApplication修饰的类所在路径以及其子路径注入到spring容器中\\n\\n@Import({EnableAutoConfigurationImportSelector.class})\\n定义从META-INF/spring.factories路径下 以全类名的方式注入到容器中完成了自动配置 \\n@ComponentScan\\n定义：添加springboot扫描的路径，把我们需要注入的路径给添加进去\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),s(\"br\")])]),s(\"h2\",{attrs:{id:\"ioc\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ioc\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" IOC\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"控制反转,首先去考虑的是控制正转,我们平时使用的方法是控制正转,那么反转就是将对象的控制权交由Spring容器去管理\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"di\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#di\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" DI\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"创建对象的过程中Spring可以依据配置对象的属性进行设置，这个过程称之为依赖注入,如注解@autowired\\nspring依赖注入说的是对象依赖spring容器帮你实例化(注入)，所以很多人会把spring当作一个大的实例工厂，它帮程序生成并注入对象\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"springboot框架面试相关\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#springboot框架面试相关\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" springboot框架面试相关\")]),t._v(\" \"),s(\"p\",[t._v(\"1什么是springboot？\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"springboot是一种能够零配置快速搭建spring项目运行环境的框架,他是对Spring的再度封装.\")])]),t._v(\" \"),s(\"p\",[t._v(\"2什么叫约定大于配置\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"开发逻辑任务重要性大于环境配置\")])]),t._v(\" \"),s(\"p\",[t._v(\"3springboot可以用什么命令来启动\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"mvn package\")]),t._v(\" \"),s(\"p\",[t._v(\"进入jar包所在目录下\")]),t._v(\" \"),s(\"p\",[t._v(\"java -jar xxx.jar\")])]),t._v(\" \"),s(\"p\",[t._v(\"4springboot的核心配置文件是什么，有几种类型的写法，分别是哪两种，并解释下两种写法的语法区别\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"application.properties\")]),t._v(\" \"),s(\"p\",[t._v(\"properties   kv结构\")]),t._v(\" \"),s(\"p\",[t._v(\"yml     目录结构\")])]),t._v(\" \"),s(\"p\",[t._v(\"5springboot的核心类是哪个？\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"xxxApplication.java\")])]),t._v(\" \"),s(\"p\",[t._v(\"6核心类中有个什么注解，这个注解里有含有哪三个注解，分别解释下这三个注解的含义\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"@SpringBootApplication\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"@SpringBootConfiguration\")]),t._v(\" \"),s(\"p\",[t._v(\"--其中包含一个@component注解,是SpringBoot专用的注入Spring容器的注解\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"@EnableAutoConfiguration\")]),t._v(\" \"),s(\"p\",[t._v(\"-@AutoConfigurationPackage\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"将被@SpringBootApplication注解的类的所在路径及其子路径注入到spring容器中\")])]),t._v(\" \"),s(\"p\",[t._v(\"-@Import({EnableAutoConfigurationImportSelector.class})\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"将我们所需要的配置文件以全类名的方式注入到spring容器中\")])])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"@ComponentScan\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"添加SpringBoot的扫描路径,将需要注入的路径添加进去\")])])])]),t._v(\" \"),s(\"p\",[t._v(\"7在springboot中starter是什么\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"导入某个场景所需要的全部依赖,比如web环境,测试环境下所需要的依赖包\")])]),t._v(\" \"),s(\"p\",[t._v(\"8在springboot中为什么可以不用写版本号\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"因为他有spring-boot-starter-parent ,也就是依赖版本控制器\")])]),t._v(\" \"),s(\"p\",[t._v(\"9springboot默认打包成什么包\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"默认打成jar包,用java -jar xxx.jar方法启动\")])]),t._v(\" \"),s(\"p\",[t._v(\"10 如何添加一个扫描spring组件的注解\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v('@componentScan({\"路径\",\"路径\"})')])]),t._v(\" \"),s(\"p\",[t._v(\"11你认为springboot的优点是什么\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"简单，效率高，约定大于配置,可以用java -jar的方式来启动，可以独立部署\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])])])},[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}